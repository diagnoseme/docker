#!/bin/bash

# running containers list
dockerContainersList() {
  docker ps --format 'table {{.Names}}\t{{.ID}}\t{{.Labels}}' | grep -v '^NAMES' | sort -k 1
}

# user's id on the host
hostUser() {
  id --user
}

# user's group id on the host
hostGroup() {
  id --group
}

# filter the list based on the first parameter
if [[ $1 ]]; then
  list=$(dockerContainersList | grep $1)
else
  list=$(dockerContainersList)
fi

# create arrays from the list (print the array: declare -p name)
names=($(echo "$list" | awk '{print $1}'))
ids=($(echo "$list" | awk '{print $2}'))

# show the running container names
for ((idx=0; idx<${#names[@]}; ++idx)); do
    value="${names[idx]}"
    index=$(echo "$idx+1" | bc)

    # show pretty name
    name=$(echo $value | sed 's/\..*//')

    echo -e "$index"'\t'"$name"
done

# ask for a number from the list
echo
read -p '? ' number

# ask for the user type
echo
echo "Connect as a root? y/[n]"
echo
read -p "? " connectAsRoot
case $connectAsRoot in
  y|Y)
    user="root"
    group="root"
  ;;
  n|N|*)
    user=$(hostUser)
    group=$(hostGroup)
  ;;
esac

# remap selected number to array key
index=$(echo "$number-1" | bc)

# set connection details
name=$(echo ${names[$index]})
id=$(echo ${ids[$index]})
shell="bash"

# show connection details
echo
echo "Attaching to the selected container..."
echo
echo "Name: $name"
echo "Id: $id"
echo "Shell: $shell"
echo "User: $user"
echo "Group: $group"
echo

# attach to the container
docker exec --interactive --tty --user $user:$group $id $shell
